{"version":3,"sources":["components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/App.styled.js","components/App.jsx","index.js"],"names":["Form","styled","form","Input","input","Label","label","Button","button","div","ContactForm","onSubmit","useState","name","number","setForm","handleChange","target","value","prevForm","e","preventDefault","autoComplete","type","placeholder","onChange","pattern","title","required","Filter","handleFilter","htmlFor","Li","li","Ul","ul","Name","span","Number","ContactList","contacts","removeContact","elements","map","id","onClick","Wrapper","Title","h1","SubTitle","h2","App","ContactsDemo","setContacts","filter","setFilter","filteredContacts","filterValue","toLowerCase","includes","getFilteredContacts","data","newContact","nanoid","find","contact","alert","prevContacts","item","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.abfb6e18.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\ncolor: black;\npadding: 30px 15px 20px;\nborder-top: 1px solid maroon;\nborder-bottom: 1px solid maroon;\n`;\n\nexport const Input = styled.input`\ndisplay: flex;\njustify-content: center;\nwidth: 300px;\nmargin: 0 auto 15px;\npadding: 10px 0 10px 20px;\nheight: 20px;\nbackground-color: floralwhite;\nborder: 1px solid black;\nborder-radius: 0 30px 30px 30px;\nbox-shadow: rgba(0, 0, 0, 0.15) 0px 2px 8px;\n`;\n\nexport const Label = styled.label`\ndisplay: inline-block;\nmargin: 0;\npadding: 5px 0 1px 10px;\nborder-color: black;\nborder-style: solid;\nborder-width: 0 0 0 2px;\nborder-radius: 20px 20px 0 0;\nfont-size: 14px;\n\n`;\n\nexport const Button = styled.button`\nmargin: 0 auto;\nheight: 25px;\nwidth: 100px;\nborder: 0.3px solid black;\nborder-radius: 20px;\nbox-shadow: rgba(0, 0, 0, 0.19) 0px 10px 20px, rgba(0, 0, 0, 0.23) 0px 6px 6px;\ncursor: pointer;\ntransform: scale(1);\ntransition: transform 250ms, background-color 1000ms cubic-bezier(0.4, 0, 0.2, 1), color 500ms cubic-bezier(0.4, 0, 0.2, 1), box-shadow 500ms cubic-bezier(0.4, 0, 0.2, 1);\n&:hover {\n  background-color: maroon;\n  color: white;\n  transform: scale(0.95);\n  transition: transform 500ms;\n  box-shadow: rgba(9, 30, 66, 0.25) 0px 4px 8px -2px, rgba(9, 30, 66, 0.08) 0px 0px 0px 1px;\n}\n`;\n\nexport const Field = styled.div`\nmargin: 0;\n`;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, Input, Label, Button } from './ContactForm.styled';\n\nconst ContactForm = ({ onSubmit }) => {\n  const [form, setForm] = useState({\n    name: '',\n    number: '',\n  });\n\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n    setForm(prevForm => ({\n      ...prevForm,\n      [name]: value,\n    }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ ...form });\n    setForm({\n      name: '',\n      number: '',\n    });\n  };\n\n  const { name, number } = form;\n\n  return (\n    <>\n      <Form onSubmit={handleSubmit} autoComplete=\"on\">\n        <Label>Name</Label>\n        <Input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Enter your name ...\"\n          onChange={handleChange}\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n        <Label>Number</Label>\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          placeholder=\"Enter phone number ...\"\n          onChange={handleChange}\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n        <Button type=\"submit\">Add contact</Button>\n      </Form>\n    </>\n  );\n};\n\nexport default ContactForm;\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\ndisplay: inline-block;\nmargin: 0 14px 0;\npadding: 5px 0 1px 10px;\nborder-color: black;\nborder-style: solid;\nborder-width: 0 0 0 2px;\nborder-radius: 20px 20px 0 0;\nfont-size: 14px;\n`;\n\nexport const Input = styled.input`\nwidth: 300px;\nmargin: 0 auto 15px;\npadding: 10px 0 10px 20px;\nheight: 20px;\nbackground-color: floralwhite;\nborder: 1px solid black;\nborder-radius: 0 30px 30px 30px;\nbox-shadow: rgba(0, 0, 0, 0.15) 0px 2px 8px;\n`;\n","import PropTypes from 'prop-types';\nimport { Label, Input } from './Filter.styled';\n\nconst Filter = ({ handleFilter }) => {\n  return (\n    <>\n      <Label htmlFor=\"\">Find contacts by name</Label>\n      <Input\n        name=\"filter\"\n        onChange={handleFilter}\n        type=\"text\"\n        placeholder=\"Сontact search ...\"\n      />\n    </>\n  );\n};\n\nexport default Filter;\n\nFilter.propTypes = {\n  handleFilter: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Li = styled.li`\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\nmargin-bottom: 10px;\npadding: 0 10px 2px;\nletter-spacing: .2rem;\nborder-width: 0 0 1px 0;\nborder-style: dotted;\nborder-color: maroon;\n`;\n\nexport const Ul = styled.ul`\npadding: 0;\nmargin: 20px 20px 0 20px;\nlist-style: none;\n`;\n\nexport const Button = styled.button`\nmargin: 0;\nheight: 25px;\nwidth: 70px;\nborder: 0.3px solid black;\nborder-radius: 20px;\nbox-shadow: rgba(0, 0, 0, 0.19) 0px 10px 20px, rgba(0, 0, 0, 0.23) 0px 6px 6px;\ncursor: pointer;\ntransform: scale(1);\ntransition: transform 250ms, background-color 1000ms cubic-bezier(0.4, 0, 0.2, 1), color 500ms cubic-bezier(0.4, 0, 0.2, 1), box-shadow 500ms cubic-bezier(0.4, 0, 0.2, 1);\n&:hover {\n  background-color: maroon;\n  color: white;\n  transform: scale(0.95);\n  transition: transform 500ms;\n  box-shadow: rgba(9, 30, 66, 0.25) 0px 4px 8px -2px, rgba(9, 30, 66, 0.08) 0px 0px 0px 1px;\n}\n`;\n\nexport const Name = styled.span`\nmargin-bottom: 5px;\nfont-size: 18px;\nfont-weight: 700;\n`;\n\nexport const Number = styled.span`\nmargin-bottom: 5px;\nfont-size: 16px;\nfont-weight: 500;\n`;\n","import PropTypes from 'prop-types';\nimport { Li, Ul, Button, Name, Number } from './ContactList.styled';\n\nconst ContactList = ({ contacts, removeContact }) => {\n  const elements = contacts.map(({ id, name, number }) => (\n    <Li key={id}>\n      <Name>{name} :</Name>\n      <Number>{number}</Number>\n      <Button type=\"button\" onClick={() => removeContact(id)}>\n        Delete\n      </Button>\n    </Li>\n  ));\n  return <Ul>{elements}</Ul>;\n};\n\nexport default ContactList;\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  removeContact: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\ndisplay: flex;\nflex-direction: column;\njustify-content: start;\nwidth: 350px;\nmin-height: 80vh;\nmargin: 30px auto 30px;\npadding: 20px;\nborder-width: 10px 0 10px 0;\nborder-color: maroon;\nborder-style: solid;\nbackground-color: #fff;\n`;\n\nexport const Title = styled.h1`\ntext-align: center;\ntext-transform: uppercase;\ncolor: black;\n`;\n\nexport const SubTitle = styled.h2`\ntext-align: center;\ntext-transform: uppercase;\ncolor: black;\n`;\n\n","import { useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport ContactForm from './ContactForm';\nimport Filter from './Filter';\nimport ContactList from './ContactList';\nimport ContactsDemo from './contactDemo.json';\nimport { Wrapper, Title, SubTitle } from './App.styled';\n\nexport const App = () => {\n  const [contacts, setContacts] = useState(ContactsDemo);\n  const [filter, setFilter] = useState('');\n\n  const addContact = data => {\n    const { name, number } = data;\n    const newContact = {\n      name,\n      number,\n      id: nanoid(),\n    };\n\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      alert(`${data.name} is already in contacts!`);\n      return;\n    }\n    setContacts(prevContacts => [...prevContacts, newContact]);\n  };\n\n  const removeContact = id => {\n    setContacts(prevContacts => prevContacts.filter(item => item.id !== id));\n  };\n\n  const getFilteredContacts = () => {\n    //проверка на пустую строку\n    if (!filter) {\n      return contacts;\n    }\n    const filterValue = filter.toLowerCase();\n    const filteredContacts = contacts.filter(({ name }) => {\n      const nameValue = name.toLowerCase();\n      return nameValue.includes(filterValue);\n    });\n    return filteredContacts;\n  };\n\n  const handleFilter = ({ target }) => setFilter(target.value);\n\n  const filteredContacts = getFilteredContacts();\n  return (\n    <Wrapper>\n      <Title>Phonebook</Title>\n      <ContactForm onSubmit={addContact} />\n      <SubTitle>Contacts</SubTitle>\n      <Filter handleFilter={handleFilter} />\n      <ContactList contacts={filteredContacts} removeContact={removeContact} />\n    </Wrapper>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { App } from './components/App';\nimport './index.css';\n\nReactDOM.createRoot(document.getElementById('root')).render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}